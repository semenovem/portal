// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "semenovem@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Логин/пароль",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.loginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Выход из авторизованной сессии пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh токен",
                        "name": "refresh-token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/auth/onetime": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Создание ссылки для одноразовой авторизации",
                "parameters": [
                    {
                        "description": "данные для создания сессии",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.onetimeAuthForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.onetimeAuthResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/auth/onetime/:entry_id": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Логин по одноразовой ссылке",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id сессии авторизации",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.loginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Обновление токена авторизации",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh токен",
                        "name": "refresh-token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_auth_controller.refreshResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/media/file": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "note - подпись к файлу (опционально)\nfile - файл\n",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "media"
                ],
                "summary": "Сохранение файлов",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_media_controller.fileUploadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "` + "`" + `expired_at` + "`" + ` в формате ` + "`" + `2001-03-24T00:00:00Z` + "`" + `\nвведенный login нужно проверить, что он допустим ` + "`" + `/people/free-login/:login_name` + "`" + `\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Создает пользователя",
                "parameters": [
                    {
                        "description": "данные создаваемого пользователя",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.createUserForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.userPublicProfileView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/:user_id": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Удаляет пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no-content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/:user_id/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Проверяет действующие права на просмотр расширенных данных пользователя\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Получить профиль пользователя по его ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.userPublicProfileView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/:user_id/profile/public": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Получить публичный профиль пользователя по его ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.userPublicProfileView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/employee/:user_id": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "` + "`" + `expired_at, worked_at, fired_at` + "`" + ` в формате ` + "`" + `2001-03-24T00:00:00Z` + "`" + `\n\n\n\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Обновление данных пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.employeeUpdateForm"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/free-login/:login_name": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Проверяет, свободен ли указанный логин",
                "parameters": [
                    {
                        "type": "string",
                        "description": "проверяемый логин",
                        "name": "login",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.freeLoginNameResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/handbook": {
            "get": {
                "description": "Доступен в локальной сети без авторизации\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Справочник сотрудников",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.publicHandbookResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/positions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Проверяет действующие права на просмотр расширенных данных пользователя\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people/position"
                ],
                "summary": "Получить профиль пользователя по его ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/people/self/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "people"
                ],
                "summary": "Получить свой профиль",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_people_controller.userPublicProfileView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/store/:store_path": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Чтение произвольных клиентских данных",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code store",
                        "name": "store_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_store_controller.loadView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Для возможности восстановления состоянии на клиенте\n",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Сохранение произвольных клиентских данных",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code store",
                        "name": "store_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для сохранения",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_abc_store_controller.storeForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "no content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "store"
                ],
                "summary": "Удаление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "code store",
                        "name": "store_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/vehicles": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Ищет автомобили по фильтру",
                "parameters": [
                    {
                        "type": "string",
                        "name": "end_time",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "slug[]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "start_time",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "user_id[]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_vehicle_controller.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        },
        "/vehicles/:vehicle_id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Получает данные автомобиля по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID автомобиля",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_vehicle_controller.vehicleView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Обновляет данные автомобиля",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID автомобиля",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_abc_vehicle_controller.vehicleView"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicles"
                ],
                "summary": "Удаляет автомобиль",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID автомобиля",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_semenovem_portal_pkg_fail.Response": {
            "type": "object",
            "properties": {
                "additional_fields": {
                    "type": "object",
                    "additionalProperties": true
                },
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_semenovem_portal_pkg_fail.ValidationError"
                    }
                }
            }
        },
        "github_com_semenovem_portal_pkg_fail.ValidationError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                }
            }
        },
        "internal_abc_auth_controller.loginForm": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "internal_abc_auth_controller.loginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "description": "TODO для разработки",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "internal_abc_auth_controller.onetimeAuthForm": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "internal_abc_auth_controller.onetimeAuthResponse": {
            "type": "object",
            "properties": {
                "entry_id": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "internal_abc_auth_controller.refreshResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "description": "TODO для разработки",
                    "type": "string"
                }
            }
        },
        "internal_abc_media_controller.fileUploadResponse": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/internal_abc_media_controller.fileUploadView"
                }
            }
        },
        "internal_abc_media_controller.fileUploadView": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "preview_link": {
                    "description": "uri",
                    "type": "string"
                }
            }
        },
        "internal_abc_people_controller.createUserForm": {
            "type": "object",
            "required": [
                "firstname",
                "surname"
            ],
            "properties": {
                "avatar_id": {
                    "type": "integer"
                },
                "expired_at": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "passwd": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "internal_abc_people_controller.employeeUpdateForm": {
            "type": "object",
            "properties": {
                "avatar_id": {
                    "type": "integer"
                },
                "dept_id": {
                    "type": "integer"
                },
                "expired_at": {
                    "type": "string"
                },
                "fired_at": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "login": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "worked_at": {
                    "type": "string"
                }
            }
        },
        "internal_abc_people_controller.freeLoginNameResponse": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "boolean"
                },
                "validate_err": {
                    "type": "string"
                }
            }
        },
        "internal_abc_people_controller.publicEmployeeView": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "boss_id": {
                    "type": "integer"
                },
                "dept_name": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "note": {
                    "type": "string"
                },
                "position_name": {
                    "type": "string"
                },
                "start_work_at": {
                    "description": "Дата начала работы",
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "internal_abc_people_controller.publicHandbookResponse": {
            "type": "object",
            "properties": {
                "employees": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_abc_people_controller.publicEmployeeView"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_abc_people_controller.userPublicProfileView": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "internal_abc_store_controller.loadView": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "string"
                }
            }
        },
        "internal_abc_store_controller.storeForm": {
            "type": "object",
            "required": [
                "payload",
                "storePath"
            ],
            "properties": {
                "payload": {
                    "type": "string"
                },
                "storePath": {
                    "type": "string"
                }
            }
        },
        "internal_abc_vehicle_controller.ListResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_abc_vehicle_controller.VehicleShort"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "internal_abc_vehicle_controller.VehicleShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "integer"
                }
            }
        },
        "internal_abc_vehicle_controller.vehicleView": {
            "type": "object"
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/[v1]/",
	Schemes:          []string{},
	Title:            "portal API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
